- name: Install and setup sensord
  hosts: rocket,&pi
  vars:
    venv: /opt/sensord_venv
    units:
    # TODO: Uncomment when we get these sensors working
      - sensor-reader@system.service
      # - sensor-reader@mpu6050.service
      - sensor-reader@bno055.service
      - sensor-reader@mpl3115.service
      - sensor-reader@mcp3004.service
      - sensor-reader@kiss.service
      - sensor-logger.service
      - state-machine.service
  gather_facts: false
  become: true
  tasks:
    - name: Install pip
      ansible.builtin.apt:
        name:
          - python3-pip
          - python3-venv
          - python3-libiio
          - python3-psutil
    - name: Setup venv
      ansible.builtin.pip:
        virtualenv_command: python3 -m venv
        virtualenv: "{{ venv }}"
        virtualenv_site_packages: true
        name: 
          - Adafruit_PureIO
          - paho-mqtt
          - humanize
          - kiss3
      notify: Restart services
    - name: Copy source
      ansible.posix.synchronize:
        src: src/
        dest: /opt/sensord/
        archive: no
        checksum: yes
        delete: yes
        recursive: yes
      notify: Restart services 

    - name: Copy sensor-reader@.service
      ansible.builtin.copy:
        src: sensor-reader@.service
        dest: /etc/systemd/system
        owner: root
        mode: 0644
      notify: Restart services
    - name: Copy sensor-logger.service
      ansible.builtin.copy:
        src: sensor-logger.service
        dest: /etc/systemd/system
        owner: root
        mode: 0644
      notify: Restart services
    - name: Copy state-machine.service
      ansible.builtin.copy:
        src: state-machine.service
        dest: /etc/systemd/system
        owner: root
        mode: 0644
      notify: Restart services

    - name: Enable services
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: started
        enabled: true
      loop: "{{ units }}"

  handlers:
    - name: Restart services
      ansible.builtin.systemd:
        name: "{{ item }}"
        daemon_reload: true
        state: restarted
      loop: "{{ units }}"
