---
- name: System Setup
  hosts: all
  become: true
  gather_facts: false
  tasks:
    - name: Copy config.txt
      ansible.builtin.copy:
        src: system/config.txt
        dest: /boot/config.txt
        owner: root
        mode: 0755 # FAT doesn't support executable bit
      register: config_txt
    - name: Copy modules-load.d/i2c-dev.conf
      ansible.builtin.copy:
        src: system/i2c-dev.conf
        dest: /etc/modules-load.d/i2c-dev.conf
        owner: root
        mode: 0644
      register: i2c_dev_conf
    - name: Reboot
      ansible.builtin.reboot:
      when: config_txt.changed or i2c_dev_conf.changed
    - name: Disable and stop packagekit
      # Uses a lot of CPU, doesn't do anything useful
      ansible.builtin.systemd:
        name: packagekit
        enabled: false
        state: stopped
- name: Setup Direwolf service
  hosts: flight_computer
  become: true
  gather_facts: false
  tasks:
    - name: Install direwolf
      ansible.builtin.apt:
        name: direwolf
        state: present
    - name: Copy direwolf Config File
      ansible.builtin.copy:
        src: direwolf/direwolf.conf
        dest: /etc/direwolf.conf
        owner: root
        mode: 0644
      register: direwolf_conf
    - name: Copy direwolf override File
      ansible.builtin.copy:
        src: direwolf/override.conf
        dest: /etc/systemd/system/direwolf.service.d
        owner: root
        mode: 0644
      register: direwolf_override
    - name: Enable direwolf service
      ansible.builtin.systemd:
        name: direwolf
        enabled: true
        daemon_reload: true
        state: '{{ "restarted" if direwolf_conf.changed or direwolf_override.changed else "started" }}'
- name: Setup SDR service
  hosts: flight_computer
  become: true
  gather_facts: false
  tasks:
    - name: Install rtl-sdr
      ansible.builtin.apt:
        name:
          - rtl-sdr
          - socat
    - name: Copy sdr Unit File
      ansible.builtin.copy:
        src: sdr/sdr.service
        dest: /etc/systemd/system
        owner: root
        mode: 0644
      register: sdr_unit
    - name: Enable sdr service
      ansible.builtin.systemd:
        name: sdr
        enabled: true
        daemon_reload: true
        state: '{{ "restarted" if sdr_unit.changed else "started" }}'
- name: Setup GPS
  hosts: all
  become: true
  gather_facts: false
  tasks:
    - name: Install Packages
      ansible.builtin.apt:
        name:
          - i2c-tools
          - socat
          - gpsd
          # - chrony
          # - pps-tools # For Testing
    - name: Download i2c_stream
      ansible.builtin.get_url:
        url: https://github.com/Rose-Rocketry/ublox-m8-i2c-standalone/releases/download/v0.0.3/i2c_stream_armhf
        checksum: sha256:924f54fc4b0e7b637e390f93a554a96a0420bda12d8cb1d0a57a472f469823eb
        mode: 0755
        dest: /usr/local/bin/i2c_stream
      register: i2c_stream_binary
    - name: Copy i2c_stream Unit File
      ansible.builtin.copy:
        src: gps/i2c_stream.service
        dest: /etc/systemd/system
        owner: root
        mode: 0644
      register: i2c_stream_unit
    - name: Enable i2c_stream service
      ansible.builtin.systemd:
        name: i2c_stream
        enabled: true
        daemon_reload: true
        state: '{{ "restarted" if i2c_stream_binary.changed or i2c_stream_unit.changed else "started" }}'
    - name: Copy gpsd variables
      ansible.builtin.copy:
        src: gps/default-gpsd
        dest: /etc/default/gpsd
        owner: root
        mode: 0644
      register: gpsd_defaults
    - name: Enable gpsd service
      ansible.builtin.systemd:
        name: gpsd
        enabled: true
        state: '{{ "restarted" if gpsd_defaults.changed else "started" }}'
    # - name: Copy chrony config
    #   ansible.builtin.copy:
    #     src: gps/chrony.conf
    #     dest: /etc/chrony/chrony.conf
    #     owner: root
    #     mode: 0644
    #   register: chrony_conf
    # - name: Enable chrony service
    #   ansible.builtin.systemd:
    #     name: chrony
    #     enabled: true
    #     state: '{{ "restarted" if chrony_conf.changed else "started" }}'
- name: Setup Datalogger
  hosts: subscale_computer
  become: true
  gather_facts: false
  tasks:
    - name: Install packages for datalogger
      ansible.builtin.apt:
        name:
          - python3-gps
          - virtualenv
    - name: Create /opt
      ansible.builtin.file:
        path: /opt
        state: directory
        owner: root
        mode: 0755
    - name: Copy source tree
      ansible.posix.synchronize:
        src: datalogger/
        dest: /opt/datalogger/
        archive: no
        checksum: yes
        delete: yes
        recursive: yes
      register: datalogger_src
    - name: Copy datalogger unit file
      ansible.builtin.copy:
        src: datalogger/datalogger.service
        dest: /etc/systemd/system
        owner: root
        mode: 0644
      register: datalogger_unit
    - name: Setup datalogger venv
      ansible.builtin.pip:
        requirements: /opt/datalogger/requirements.txt
        virtualenv: /opt/datalogger-venv
      register: datalogger_venv
    - name: Create /var/local
      ansible.builtin.file:
        path: /var/local
        state: directory
        owner: root
        mode: 0755
    - name: Create /var/local/datalogger
      ansible.builtin.file:
        path: /var/local/datalogger
        state: directory
        owner: pi
        mode: 0755
    - name: Enable datalogger service
      ansible.builtin.systemd:
        name: datalogger
        enabled: true
        daemon_reload: true
        state: '{{ "restarted" if datalogger_src.changed or datalogger_unit.changed or datalogger_venv.changed else "started" }}'
